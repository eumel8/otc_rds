#- name: Lookup rds_version_id
#  include: version.yml

- name: Request rds flavors from API
  uri:
    url: "{{ AUTH_URL_RDS }}/v3/{{ OS_USER_DOMAIN_ID }}/flavors/{{ rds_type }}?version_name={{ rds_version.rsplit('.',1)[0] }}"
    method: GET
    return_content: yes
    follow_redirects: "{{ uri_follow_redirects }}"
    validate_certs: "{{ uri_validate_certs }}"
    headers:
      Content-Type: "application/json"
      Accept: "application/json"
      X-Language: "en-us"
      X-Auth-Token: "{{ token['x_subject_token'] }}"
  register: rds_flavors
  retries: "{{ uri_retries }}"
  delay: "{{ uri_delay }}"
  until: rds_flavors.status == 200
  changed_when: false

- name: Set fact rds_flavor_id (without HA)
  set_fact:
    rds_flavor_id: "{{ (rds_flavors.content|from_json)|json_query('flavors[?ends_with(specCode,`small`) || ends_with(specCode,`medium`) || ends_with(specCode,`large`)] |sort_by(@, &ram)|[?ram>=`' + rds_ram + '`].id|[0]') }}"
  when:
    - rds_ram is defined

- name: Set fact rds_flavor_id (HA)
  set_fact:
    rds_flavor_id: "{{ (rds_flavors.content|from_json)|json_query('flavors[?ends_with(specCode,`.ha`)] |sort_by(@, &ram)|[?ram>=`' + rds_ram + '`].id|[0]') }}"
  when:
    - rds_ram is defined
    - rds_ha_enabled is defined

- name: Set fact rds_flavor_id (without HA)
  set_fact:
    rds_flavor_id: "{{ (rds_flavors.content|from_json)|json_query('flavors[?ends_with(specCode,`small`) || ends_with(specCode,`medium`) || ends_with(specCode,`large`)] |sort_by(@, &ram)|[?ram>=`' + rds_ram + '`].id|[0]') }}"
  when:
    - rds_ram is defined
    - rds_ha_enabled is defined

- name: debug rds_flavors.json
  debug:
    msg: "{{ rds_flavors.json }}"
  when:
    - localaction == "flavor"

- name: debug rds_flavor_id
  debug:
    msg: "{{ rds_flavor_id }}"
  when:
    - rds_flavor_id is defined
